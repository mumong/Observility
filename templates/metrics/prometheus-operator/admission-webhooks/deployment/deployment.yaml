{{- if and .Values.metric.enabled .Values.metric.prometheusOperator.enabled .Values.metric.prometheusOperator.admissionWebhooks.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kube-prometheus-stack.operator.fullname" . }}-webhook
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
  labels:
    app: {{ template "kube-prometheus-stack.name" . }}-operator-webhook
    {{- include "kube-prometheus-stack.prometheus-operator-webhook.labels" . | nindent 4 }}
{{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.labels }}
{{ toYaml .Values.metric.prometheusOperator.admissionWebhooks.deployment.labels | indent 4 }}
{{- end }}
{{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.annotations }}
  annotations:
{{ toYaml .Values.metric.prometheusOperator.admissionWebhooks.deployment.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.replicas }}
  revisionHistoryLimit: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.revisionHistoryLimit }}
  {{- with .Values.metric.prometheusOperator.admissionWebhooks.deployment.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "kube-prometheus-stack.name" . }}-operator-webhook
      release: {{ $.Release.Name | quote }}
  template:
    metadata:
      labels:
        app: {{ template "kube-prometheus-stack.name" . }}-operator-webhook
        {{- include "kube-prometheus-stack.prometheus-operator-webhook.labels" . | nindent 8 }}
{{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.podLabels }}
{{ toYaml .Values.metric.prometheusOperator.admissionWebhooks.deployment.podLabels | indent 8 }}
{{- end }}
{{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.podAnnotations }}
      annotations:
{{ toYaml .Values.metric.prometheusOperator.admissionWebhooks.deployment.podAnnotations | indent 8 }}
{{- end }}
    spec:
    {{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.priorityClassName }}
      priorityClassName: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.priorityClassName }}
    {{- end }}
    {{- if .Values.metric.extra.global.imagePullSecrets }}
      imagePullSecrets:
      {{- include "kube-prometheus-stack.imagePullSecrets" . | indent 8 }}
    {{- end }}
      containers:
        - name: prometheus-operator-admission-webhook
          {{- $operatorRegistry := .Values.metric.extra.global.imageRegistry | default .Values.metric.prometheusOperator.admissionWebhooks.deployment.image.registry -}}
          {{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.image.sha }}
          image: "{{ $operatorRegistry }}/{{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.image.repository }}:{{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.image.tag | default .Chart.AppVersion }}@sha256:{{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.image.sha }}"
          {{- else }}
          image: "{{ $operatorRegistry }}/{{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.image.repository }}:{{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: "{{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.image.pullPolicy }}"
          args:
            {{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.logFormat }}
            - --log-format={{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.logFormat }}
            {{- end }}
            {{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.logLevel }}
            - --log-level={{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.logLevel }}
            {{- end }}
          {{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.tls.enabled }}
            - "--web.enable-tls=true"
            - "--web.cert-file=/cert/{{ if .Values.metric.prometheusOperator.admissionWebhooks.certManager.enabled }}tls.crt{{ else }}cert{{ end }}"
            - "--web.key-file=/cert/{{ if .Values.metric.prometheusOperator.admissionWebhooks.certManager.enabled }}tls.key{{ else }}key{{ end }}"
            - "--web.listen-address=:{{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.tls.internalPort }}"
            - "--web.tls-min-version={{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.tls.tlsMinVersion }}"
          ports:
            - containerPort: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.tls.internalPort }}
              name: https
          {{- else }}
            - "--web.enable-tls=false"
            - "--web.listen-address=:8080"
          ports:
            - containerPort: 8080
              name: http
          {{- end }}
          {{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.tls.enabled | ternary "https" "http" }}
              scheme: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.tls.enabled | ternary "HTTPS" "HTTP" }}
            initialDelaySeconds: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.tls.enabled | ternary "https" "http" }}
              scheme: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.tls.enabled | ternary "HTTPS" "HTTP" }}
            initialDelaySeconds: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.livenessProbe.failureThreshold }}
          {{- end }}
          resources:
{{ toYaml .Values.metric.prometheusOperator.admissionWebhooks.deployment.resources | indent 12 }}
          securityContext:
{{ toYaml .Values.metric.prometheusOperator.admissionWebhooks.deployment.containerSecurityContext | indent 12 }}
{{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.tls.enabled }}
          volumeMounts:
            - name: tls-secret
              mountPath: /cert
              readOnly: true
      volumes:
        - name: tls-secret
          secret:
            defaultMode: 420
            secretName: {{ template "kube-prometheus-stack.fullname" . }}-admission
{{- end }}
    {{- with .Values.metric.prometheusOperator.admissionWebhooks.deployment.dnsConfig }}
      dnsConfig:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.securityContext }}
      securityContext:
{{ toYaml .Values.metric.prometheusOperator.admissionWebhooks.deployment.securityContext | indent 8 }}
{{- end }}
      serviceAccountName: {{ template "kube-prometheus-stack.operator.admissionWebhooks.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.metric.prometheusOperator.admissionWebhooks.deployment.automountServiceAccountToken }}
{{- if .Values.metric.prometheusOperator.admissionWebhooks.deployment.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
{{- end }}
    {{- with .Values.metric.prometheusOperator.admissionWebhooks.deployment.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.metric.prometheusOperator.admissionWebhooks.deployment.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.metric.prometheusOperator.admissionWebhooks.deployment.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
