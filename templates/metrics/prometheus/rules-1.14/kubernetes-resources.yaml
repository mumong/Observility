{{- /*
Generated from 'kubernetes-resources' group from https://github.com/prometheus-operator/kube-prometheus.git
Do not change in-place! In order to change this file first read following link:
https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack/hack
*/ -}}
{{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.metric.extra.kubeTargetVersionOverride }}
{{- if and .Values.metric.enabled (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.metric.extra.defaultRules.create .Values.metric.extra.defaultRules.rules.kubernetesResources }}
{{- $kubeStateMetricsJob := include "kube-prometheus-stack-kube-state-metrics.name" . }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ printf "%s-%s" (include "kube-prometheus-stack.fullname" .) "kubernetes-resources" | trunc 63 | trimSuffix "-" }}
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
  labels:
    app: {{ template "kube-prometheus-stack.name" . }}
{{ include "kube-prometheus-stack.labels" . | indent 4 }}
{{- if .Values.metric.extra.defaultRules.labels }}
{{ toYaml .Values.metric.extra.defaultRules.labels | indent 4 }}
{{- end }}
{{- if .Values.metric.extra.defaultRules.annotations }}
  annotations:
{{ toYaml .Values.metric.extra.defaultRules.annotations | indent 4 }}
{{- end }}
spec:
  groups:
  - name: kubernetes-resources
    rules:
{{- if not (.Values.metric.extra.defaultRules.disabled.KubeCPUOvercommit | default false) }}
    - alert: KubeCPUOvercommit
      annotations:
{{- if .Values.metric.extra.defaultRules.additionalRuleAnnotations }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleAnnotations | indent 8 }}
{{- end }}
{{- if .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources | indent 8 }}
{{- end }}
        description: Cluster {{`{{`}} $labels.cluster {{`}}`}} has overcommitted CPU resource requests for Pods by {{`{{`}} printf "%.2f" $value {{`}}`}} CPU shares and cannot tolerate node failure.
        runbook_url: {{ .Values.metric.extra.defaultRules.runbookUrl }}/kubernetes/kubecpuovercommit
        summary: Cluster has overcommitted CPU resource requests.
      expr: |-
        sum(namespace_cpu:kube_pod_container_resource_requests:sum{}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster) - (sum(kube_node_status_allocatable{job="{{ $kubeStateMetricsJob }}",resource="cpu"}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster) - max(kube_node_status_allocatable{job="{{ $kubeStateMetricsJob }}",resource="cpu"}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster)) > 0
        and
        (sum(kube_node_status_allocatable{job="{{ $kubeStateMetricsJob }}",resource="cpu"}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster) - max(kube_node_status_allocatable{job="{{ $kubeStateMetricsJob }}",resource="cpu"}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster)) > 0
      for: {{ dig "KubeCPUOvercommit" "for" "10m" .Values.metric.extra.customRules }}
      {{- with .Values.metric.extra.defaultRules.keepFiringFor }}
      keep_firing_for: "{{ . }}"
      {{- end }}
      labels:
        severity: {{ dig "KubeCPUOvercommit" "severity" "warning" .Values.metric.extra.customRules }}
      {{- if or .Values.metric.extra.defaultRules.additionalRuleLabels .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}
{{- if not (.Values.metric.extra.defaultRules.disabled.KubeMemoryOvercommit | default false) }}
    - alert: KubeMemoryOvercommit
      annotations:
{{- if .Values.metric.extra.defaultRules.additionalRuleAnnotations }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleAnnotations | indent 8 }}
{{- end }}
{{- if .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources | indent 8 }}
{{- end }}
        description: Cluster {{`{{`}} $labels.cluster {{`}}`}} has overcommitted memory resource requests for Pods by {{`{{`}} $value | humanize {{`}}`}} bytes and cannot tolerate node failure.
        runbook_url: {{ .Values.metric.extra.defaultRules.runbookUrl }}/kubernetes/kubememoryovercommit
        summary: Cluster has overcommitted memory resource requests.
      expr: |-
        sum(namespace_memory:kube_pod_container_resource_requests:sum{}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster) - (sum(kube_node_status_allocatable{resource="memory", job="{{ $kubeStateMetricsJob }}"}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster) - max(kube_node_status_allocatable{resource="memory", job="{{ $kubeStateMetricsJob }}"}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster)) > 0
        and
        (sum(kube_node_status_allocatable{resource="memory", job="{{ $kubeStateMetricsJob }}"}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster) - max(kube_node_status_allocatable{resource="memory", job="{{ $kubeStateMetricsJob }}"}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster)) > 0
      for: {{ dig "KubeMemoryOvercommit" "for" "10m" .Values.metric.extra.customRules }}
      {{- with .Values.metric.extra.defaultRules.keepFiringFor }}
      keep_firing_for: "{{ . }}"
      {{- end }}
      labels:
        severity: {{ dig "KubeMemoryOvercommit" "severity" "warning" .Values.metric.extra.customRules }}
      {{- if or .Values.metric.extra.defaultRules.additionalRuleLabels .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}
{{- if not (.Values.metric.extra.defaultRules.disabled.KubeCPUQuotaOvercommit | default false) }}
    - alert: KubeCPUQuotaOvercommit
      annotations:
{{- if .Values.metric.extra.defaultRules.additionalRuleAnnotations }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleAnnotations | indent 8 }}
{{- end }}
{{- if .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources | indent 8 }}
{{- end }}
        description: Cluster {{`{{`}} $labels.cluster {{`}}`}}  has overcommitted CPU resource requests for Namespaces.
        runbook_url: {{ .Values.metric.extra.defaultRules.runbookUrl }}/kubernetes/kubecpuquotaovercommit
        summary: Cluster has overcommitted CPU resource requests.
      expr: |-
        sum(min without(resource) (kube_resourcequota{job="{{ $kubeStateMetricsJob }}", type="hard", resource=~"(cpu|requests.cpu)"})) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster)
          /
        sum(kube_node_status_allocatable{resource="cpu", job="{{ $kubeStateMetricsJob }}"}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster)
          > 1.5
      for: {{ dig "KubeCPUQuotaOvercommit" "for" "5m" .Values.metric.extra.customRules }}
      {{- with .Values.metric.extra.defaultRules.keepFiringFor }}
      keep_firing_for: "{{ . }}"
      {{- end }}
      labels:
        severity: {{ dig "KubeCPUQuotaOvercommit" "severity" "warning" .Values.metric.extra.customRules }}
      {{- if or .Values.metric.extra.defaultRules.additionalRuleLabels .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}
{{- if not (.Values.metric.extra.defaultRules.disabled.KubeMemoryQuotaOvercommit | default false) }}
    - alert: KubeMemoryQuotaOvercommit
      annotations:
{{- if .Values.metric.extra.defaultRules.additionalRuleAnnotations }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleAnnotations | indent 8 }}
{{- end }}
{{- if .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources | indent 8 }}
{{- end }}
        description: Cluster {{`{{`}} $labels.cluster {{`}}`}} has overcommitted memory resource requests for Namespaces.
        runbook_url: {{ .Values.metric.extra.defaultRules.runbookUrl }}/kubernetes/kubememoryquotaovercommit
        summary: Cluster has overcommitted memory resource requests.
      expr: |-
        sum(min without(resource) (kube_resourcequota{job="{{ $kubeStateMetricsJob }}", type="hard", resource=~"(memory|requests.memory)"})) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster)
          /
        sum(kube_node_status_allocatable{resource="memory", job="{{ $kubeStateMetricsJob }}"}) by ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster)
          > 1.5
      for: {{ dig "KubeMemoryQuotaOvercommit" "for" "5m" .Values.metric.extra.customRules }}
      {{- with .Values.metric.extra.defaultRules.keepFiringFor }}
      keep_firing_for: "{{ . }}"
      {{- end }}
      labels:
        severity: {{ dig "KubeMemoryQuotaOvercommit" "severity" "warning" .Values.metric.extra.customRules }}
      {{- if or .Values.metric.extra.defaultRules.additionalRuleLabels .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}
{{- if not (.Values.metric.extra.defaultRules.disabled.KubeQuotaAlmostFull | default false) }}
    - alert: KubeQuotaAlmostFull
      annotations:
{{- if .Values.metric.extra.defaultRules.additionalRuleAnnotations }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleAnnotations | indent 8 }}
{{- end }}
{{- if .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources | indent 8 }}
{{- end }}
        description: Namespace {{`{{`}} $labels.namespace {{`}}`}} is using {{`{{`}} $value | humanizePercentage {{`}}`}} of its {{`{{`}} $labels.resource {{`}}`}} quota on cluster {{`{{`}} $labels.cluster {{`}}`}}.
        runbook_url: {{ .Values.metric.extra.defaultRules.runbookUrl }}/kubernetes/kubequotaalmostfull
        summary: Namespace quota is going to be full.
      expr: |-
        kube_resourcequota{job="{{ $kubeStateMetricsJob }}", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="{{ $kubeStateMetricsJob }}", type="hard"} > 0)
          > 0.9 < 1
      for: {{ dig "KubeQuotaAlmostFull" "for" "15m" .Values.metric.extra.customRules }}
      {{- with .Values.metric.extra.defaultRules.keepFiringFor }}
      keep_firing_for: "{{ . }}"
      {{- end }}
      labels:
        severity: {{ dig "KubeQuotaAlmostFull" "severity" "info" .Values.metric.extra.customRules }}
      {{- if or .Values.metric.extra.defaultRules.additionalRuleLabels .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}
{{- if not (.Values.metric.extra.defaultRules.disabled.KubeQuotaFullyUsed | default false) }}
    - alert: KubeQuotaFullyUsed
      annotations:
{{- if .Values.metric.extra.defaultRules.additionalRuleAnnotations }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleAnnotations | indent 8 }}
{{- end }}
{{- if .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources | indent 8 }}
{{- end }}
        description: Namespace {{`{{`}} $labels.namespace {{`}}`}} is using {{`{{`}} $value | humanizePercentage {{`}}`}} of its {{`{{`}} $labels.resource {{`}}`}} quota on cluster {{`{{`}} $labels.cluster {{`}}`}}.
        runbook_url: {{ .Values.metric.extra.defaultRules.runbookUrl }}/kubernetes/kubequotafullyused
        summary: Namespace quota is fully used.
      expr: |-
        kube_resourcequota{job="{{ $kubeStateMetricsJob }}", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="{{ $kubeStateMetricsJob }}", type="hard"} > 0)
          == 1
      for: {{ dig "KubeQuotaFullyUsed" "for" "15m" .Values.metric.extra.customRules }}
      {{- with .Values.metric.extra.defaultRules.keepFiringFor }}
      keep_firing_for: "{{ . }}"
      {{- end }}
      labels:
        severity: {{ dig "KubeQuotaFullyUsed" "severity" "info" .Values.metric.extra.customRules }}
      {{- if or .Values.metric.extra.defaultRules.additionalRuleLabels .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}
{{- if not (.Values.metric.extra.defaultRules.disabled.KubeQuotaExceeded | default false) }}
    - alert: KubeQuotaExceeded
      annotations:
{{- if .Values.metric.extra.defaultRules.additionalRuleAnnotations }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleAnnotations | indent 8 }}
{{- end }}
{{- if .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources | indent 8 }}
{{- end }}
        description: Namespace {{`{{`}} $labels.namespace {{`}}`}} is using {{`{{`}} $value | humanizePercentage {{`}}`}} of its {{`{{`}} $labels.resource {{`}}`}} quota on cluster {{`{{`}} $labels.cluster {{`}}`}}.
        runbook_url: {{ .Values.metric.extra.defaultRules.runbookUrl }}/kubernetes/kubequotaexceeded
        summary: Namespace quota has exceeded the limits.
      expr: |-
        kube_resourcequota{job="{{ $kubeStateMetricsJob }}", type="used"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="{{ $kubeStateMetricsJob }}", type="hard"} > 0)
          > 1
      for: {{ dig "KubeQuotaExceeded" "for" "15m" .Values.metric.extra.customRules }}
      {{- with .Values.metric.extra.defaultRules.keepFiringFor }}
      keep_firing_for: "{{ . }}"
      {{- end }}
      labels:
        severity: {{ dig "KubeQuotaExceeded" "severity" "warning" .Values.metric.extra.customRules }}
      {{- if or .Values.metric.extra.defaultRules.additionalRuleLabels .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}
{{- if not (.Values.metric.extra.defaultRules.disabled.CPUThrottlingHigh | default false) }}
    - alert: CPUThrottlingHigh
      annotations:
{{- if .Values.metric.extra.defaultRules.additionalRuleAnnotations }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleAnnotations | indent 8 }}
{{- end }}
{{- if .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources }}
{{ toYaml .Values.metric.extra.defaultRules.additionalRuleGroupAnnotations.kubernetesResources | indent 8 }}
{{- end }}
        description: '{{`{{`}} $value | humanizePercentage {{`}}`}} throttling of CPU in namespace {{`{{`}} $labels.namespace {{`}}`}} for container {{`{{`}} $labels.container {{`}}`}} in pod {{`{{`}} $labels.pod {{`}}`}} on cluster {{`{{`}} $labels.cluster {{`}}`}}.'
        runbook_url: {{ .Values.metric.extra.defaultRules.runbookUrl }}/kubernetes/cputhrottlinghigh
        summary: Processes experience elevated CPU throttling.
      expr: |-
        sum(increase(container_cpu_cfs_throttled_periods_total{container!="", job="kubelet", metrics_path="/metrics/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
          / on ({{ range $.Values.metric.extra.defaultRules.additionalAggregationLabels }}{{ . }},{{ end }}cluster, namespace, pod, container, instance) group_left
        sum(increase(container_cpu_cfs_periods_total{job="kubelet", metrics_path="/metrics/cadvisor", }[5m])) without (id, metrics_path, name, image, endpoint, job, node)
          > ( 25 / 100 )
      for: {{ dig "CPUThrottlingHigh" "for" "15m" .Values.metric.extra.customRules }}
      {{- with .Values.metric.extra.defaultRules.keepFiringFor }}
      keep_firing_for: "{{ . }}"
      {{- end }}
      labels:
        severity: {{ dig "CPUThrottlingHigh" "severity" "info" .Values.metric.extra.customRules }}
      {{- if or .Values.metric.extra.defaultRules.additionalRuleLabels .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.metric.extra.defaultRules.additionalRuleGroupLabels.kubernetesResources }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}
{{- end }}