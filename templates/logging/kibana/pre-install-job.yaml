{{- if and .Values.logging.enabled .Values.logging.kibana.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-install-{{ include "kibana.uname" . }}
  labels: {{ include "kibana.labels" . | nindent 4 }}
  # annotations:
    # "helm.sh/hook": pre-install,pre-upgrade
    # "helm.sh/hook": post-install
    # "helm.sh/hook-weight": "0"
    # "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 20
  activeDeadlineSeconds: 600
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: create-kibana-token
          image: {{ .Values.logging.kibana.image }}:{{ .Values.logging.kibana.imageTag }}
          imagePullPolicy: {{ .Values.logging.kibana.imagePullPolicy | quote }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              ES_HOST={{ include "kibana.elasticsearch.host" . }}
              ES_HEALTH_PATH="/_cluster/health"
              ES_USER="$ELASTICSEARCH_USERNAME"
              ES_PASS="$ELASTICSEARCH_PASSWORD"
              echo "Waiting for Elasticsearch at $ES_HOST$ES_HEALTH_PATH ..."
              until curl -k -u "$ES_USER:$ES_PASS" --fail "$ES_HOST$ES_HEALTH_PATH"; do
                echo 'Waiting for Elasticsearch...'
                sleep 5
              done
              exec {{ include "kibana.home_dir" . }}/node/bin/node {{ include "kibana.home_dir" . }}/helm-scripts/manage-es-token.js create
          env:
            - name: "ELASTICSEARCH_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: {{ include "kibana.elasticsearch.credSecret" . }}
                  key: username
            - name: "ELASTICSEARCH_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ include "kibana.elasticsearch.credSecret" . }}
                  key: password
            - name: ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES
              value: "{{ include "kibana.home_dir" . }}/config/certs/{{ include "kibana.elasticsearch.caFile" . }}"
            - name: ELASTICSEARCH_HOSTS
              value: "{{ include "kibana.elasticsearch.host" . }}"
          volumeMounts:
            - name: elasticsearch-certs
              mountPath: {{ include "kibana.home_dir" . }}/config/certs
              readOnly: true
            - name: kibana-helm-scripts
              mountPath: {{ include "kibana.home_dir" . }}/helm-scripts
      serviceAccount: pre-install-{{ include "kibana.uname" . }}
      volumes:
        - name: elasticsearch-certs
          secret:
            secretName: {{ include "kibana.elasticsearch.certSecret" . }}
        - name: kibana-helm-scripts
          configMap:
            name: {{ include "kibana.uname" . }}-helm-scripts
            defaultMode: 0755
{{- end }}
